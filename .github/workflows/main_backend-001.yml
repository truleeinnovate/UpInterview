# name: Build and deploy Node.js app to Azure Web App - backend-001

# on:
#   push:
#     branches:
#       - main
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     permissions:
#       contents: read

#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Node.js version
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20.x'

#       - name: npm install, build, and test
#         working-directory: ./backend
#         run: |
#           npm install
#           npm run build --if-present

#       - name: Create Deployment Structure
#         run: |
#           mkdir -p deploy/backend
#           cp -r backend/* deploy/backend/
#           cd deploy
#           zip -r ../release.zip .

#       - name: Upload artifact for deployment job
#         uses: actions/upload-artifact@v4
#         with:
#           name: node-app
#           path: release.zip

#   deploy:
#     runs-on: ubuntu-latest
#     needs: build
#     environment:
#       name: 'Production'
#       url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

#     steps:
#       - name: Download artifact from build job
#         uses: actions/download-artifact@v4
#         with:
#           name: node-app

#       - name: Unzip artifact for deployment
#         run: unzip release.zip

#       - name: 'Deploy to Azure Web App'
#         id: deploy-to-webapp
#         uses: azure/webapps-deploy@v3
#         with:
#           app-name: 'backend-001'
#           slot-name: 'Production'
#           package: .
#           publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_1538A423DB434915BF49499792B1E04C }}
#           clean: true


name: Build and deploy Node.js app to Azure Web App - backend-001

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: './backend/package-lock.json'

      - name: Install dependencies
        working-directory: ./backend
        env:
          # LinkedIn OAuth configuration
          REACT_APP_CLIENT_ID: ${{ secrets.REACT_APP_CLIENT_ID }}
          REACT_APP_CLIENT_SECRET: ${{ secrets.REACT_APP_CLIENT_SECRET }}
          REACT_APP_REDIRECT_URI: ${{ secrets.REACT_APP_REDIRECT_URI }}
          
          # API URLs
          REACT_APP_API_URL_FRONTEND: ${{ secrets.REACT_APP_API_URL_FRONTEND }}
        run: npm ci --only=production

      - name: Create optimized deployment package
        run: |
          # Create deployment directory
          mkdir -p deploy/backend
          
          # Copy only essential files (much faster than rsync)
          cp -r backend/package*.json deploy/backend/
          cp -r backend/index.js deploy/backend/
          cp -r backend/config.js deploy/backend/
          cp -r backend/web.config deploy/backend/
          cp -r backend/routes deploy/backend/
          cp -r backend/controllers deploy/backend/
          cp -r backend/models deploy/backend/
          cp -r backend/middleware deploy/backend/
          cp -r backend/utils deploy/backend/
          cp -r backend/constants deploy/backend/
          
          # Copy node_modules (already installed with production deps)
          cp -r backend/node_modules deploy/backend/
          
          # Create zip file
          cd deploy
          zip -r ../release.zip . -x "*.git*" "*.DS_Store*" "*.log*"

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'backend-001'
          slot-name: 'Production'
          package: release.zip
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_1538A423DB434915BF49499792B1E04C }}
          clean: true
